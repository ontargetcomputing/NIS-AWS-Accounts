name: Run Terraformer

on:
  workflow_dispatch: # This allows manually triggering the workflow from GitHub Actions UI
  pull_request:
    types: [labeled]

jobs:
  terraformer_on_import_label:
    if: github.event.label.name == 'import'
    runs-on: ubuntu-latest

    steps:
      - name: Run only when 'import' label is added to PR targeting main
        run: echo "The 'import' label has been added to a pull request targeting the main branch."

        # Step 1: Check out the repository code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up AWS credentials (if using AWS)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 
      
      # Step 3: Install Terraformer
      - name: Install Terraformer
        run: |
          wget https://github.com/GoogleCloudPlatform/terraformer/releases/download/0.8.24/terraformer-all-linux-amd64
          chmod +x terraformer-all-linux-amd64
          sudo mv terraformer-all-linux-amd64 /usr/local/bin/terraformer

      # Step 4: Run Terraformer to generate Terraform configuration
          # terraformer import aws --resources=vpc,subnet,ec2 --regions=us-west-1 \
          # --profile=default --filter="Name=vpc_id;Value=vpc-12345"
      - name: Run Terraformer to generate plan
        run: |
          terraformer plan aws --resources=vpc --regions=us-west-2


      # Step 4: Run Terraformer to generate Terraform configuration
          # terraformer import aws --resources=vpc,subnet,ec2 --regions=us-west-1 \
          # --profile=default --filter="Name=vpc_id;Value=vpc-12345"
      # - name: Run Terraformer to generate AWS infrastructure as code
      #   run: |
      #     terraformer import aws --resources=ec2 --regions=us-west-2 




      # Step 5: Commit and push generated Terraform files back to the repository
      # - name: Commit and push changes
      #   run: |
      #     git config --global user.name "github-actions[bot]"
      #     git config --global user.email "github-actions[bot]@users.noreply.github.com"
      #     git add .
      #     git commit -m "Add Terraform configurations from Terraformer"
      #     git push origin main
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  check_for_skipped_workflow:
    # This runs regardless of the previous job outcome.
    runs-on: ubuntu-latest
    needs: terraformer_on_import_label
    if: always()
    steps:
      - name: Check if the previous job was skipped
        run: |
          if [[ "${{ needs.terraformer_on_import_label.result }}" == "skipped" ]]; then
            echo "The workflow was skipped because the 'import' label was not added or the target branch is not 'main'."
          else
            echo "The workflow was run because the 'import' label was added and the target branch was is 'main'."
          fi